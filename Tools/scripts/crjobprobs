#!/usr/bin/env python

import os, sys
from collections import defaultdict
from pprint import pprint
from JMTucker.Tools.CRABTools import decrabify_list, crabify_list

print_job_lists = 'no_job_lists' not in sys.argv
totals_only = 'totals_only' in sys.argv
by_host = 'by_host' in sys.argv
magic = 'SyncCE=' if by_host else 'SyncSite='

line_count = 0
total_ce_counts = defaultdict(int)
total_ce_jobs = defaultdict(lambda: defaultdict(list))

for line in sys.stdin:
    if not totals_only and line_count > 0:
        print '-'*72
    line_count += 1
    dir, jobs = line.split()
    jobs = decrabify_list(jobs)
    if not totals_only:
        print dir, 'num jobs:', len(jobs)
    files = [(j,os.path.join(dir, 'res/CMSSW_%s.stdout' % j)) for j in jobs]
    #print files
    ce_counts = defaultdict(int)
    ce_jobs = defaultdict(list)
    for job,fn in files:
        if not os.path.isfile(fn):
            ce = 'output.not.found'
        else:
            try:
                ce = [l.strip() for l in open(fn).readlines() if l.startswith(magic)][0]
            except IndexError:
                ce = 'output.not.parseable'
	ce_counts[ce] += 1
        ce_jobs[ce].append(job)
        total_ce_counts[ce] += 1
        total_ce_jobs[ce][dir].append(job)
    if not totals_only:
        print 'counts:'
        for kv in dict(ce_counts).iteritems():
            print '%60s: %4i' % kv
        if print_job_lists: 
            print 'jobs:'
            for k,v in dict(ce_jobs).iteritems():
                print '%60s: %s' % (k,crabify_list(v))

if line_count > 1 or totals_only:
    if not totals_only:
        print '='*72
    print 'totals:'
    total_ce_counts = total_ce_counts.items()
    total_ce_counts.sort(key=lambda x: -x[1])
    pprint(total_ce_counts)

    print '-GRID.se_black_list=' + ','.join(a.replace('SyncSite=','') for a,b in total_ce_counts if 'not.parseable' not in a)
